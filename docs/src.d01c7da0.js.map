{"version":3,"sources":["data.js","services/DB.js","components/Todo/todoTemplate.js","components/Todo/Todo.js","components/TodoList/todoListTemplate.js","components/TodoList/TodoList.js","index.js"],"names":["id","content","completed","DB","setTodos","data","localStorage","todos","JSON","stringify","findAll","parse","insertOne","push","updateOne","forEach","todo","deleteOne","filter","getTodoTemplate","replace","Todo","parent","el","toggleBtn","contentEl","editEl","document","createElement","todoListEl","append","outerHTML","catchEl","activateEl","querySelector","onclick","toggleCompleted","delete","ondblclick","editContent","classList","toggle","checked","setAttribute","removeAttribute","isHiddenBtn","setUncompletedCount","remove","isHiddenSection","value","add","focus","onblur","updateContent","onkeyup","e","key","innerText","getTodoListTemplate","TodoList","newTodoEl","clearCompletedBtn","filterLinks","selectedFilter","loadTodos","render","innerHTML","querySelectorAll","addOne","deleteCompleted","completeAll","preventDefault","style","display","length","some","uncompletedCount","at","newTodo","href","split"],"mappings":"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","file":"src.d01c7da0.js","sourceRoot":"..\\src","sourcesContent":["export default [\r\n  { id: 1, content: \"Make things happen\", completed: false },\r\n  { id: 2, content: \"Make a to-do list\", completed: true },\r\n  { id: 3, content: \"Buy a unicorn\", completed: false }\r\n];\r\n","export const DB = {\r\n  setTodos(data) {\r\n    if (!localStorage.todos) {\r\n      localStorage.todos = JSON.stringify(data);\r\n    }\r\n  },\r\n  findAll() {\r\n    return JSON.parse(localStorage.todos);\r\n  },\r\n  insertOne(data) {\r\n    const todos = JSON.parse(localStorage.todos);\r\n    todos.push(data);\r\n    localStorage.todos = JSON.stringify(todos);\r\n  },\r\n  updateOne(data) {\r\n    const todos = JSON.parse(localStorage.todos);\r\n    todos.forEach((todo) => {\r\n      if(todo.id === data.id) {\r\n        if(todo.completed !== data.completed) {\r\n          todo.completed = data.completed;\r\n        }\r\n        if(todo.content !== data.content) {\r\n          todo.content = data.content;\r\n        }\r\n      }\r\n    });\r\n    localStorage.todos = JSON.stringify(todos);\r\n  },\r\n  deleteOne(id) {\r\n    let todos = JSON.parse(localStorage.todos);\r\n    todos = todos.filter((todo) => todo.id !== id);\r\n    localStorage.todos = JSON.stringify(todos);\r\n  }\r\n};\r\n","export function getTodoTemplate(data) {\r\n  return `\r\n    <!-- List items should get the class 'editing' when editing and 'completed' when marked as completed -->\r\n    <li data-id=\"${data.id}\" ${data.completed ? \"class='completed'\" : \"\"}>\r\n      <div class=\"view\">\r\n        <input \r\n          class=\"toggle\" \r\n          type=\"checkbox\" \r\n          ${data.completed ? \"checked='checked'\" : \"\"} \r\n        />\r\n        <label>\r\n          ${data.content.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\")}\r\n        </label>\r\n        <button class=\"destroy\"></button>\r\n      </div>\r\n      <input class=\"edit\" value=\"Edit this todo\" />\r\n    </li>\r\n  `;\r\n}\r\n","import { getTodoTemplate } from \"./todoTemplate\";\r\nimport { DB } from \"../../services/DB\";\r\n\r\nexport class Todo {\r\n  constructor(data) {\r\n    this.parent = data.parent;\r\n    this.el = null;\r\n    this.toggleBtn = null;\r\n    this.contentEl = null;\r\n    this.editEl = null;\r\n    this.id = data.todo.id;\r\n    this.content = data.todo.content;\r\n    this.completed = data.todo.completed;\r\n  }\r\n  render() {\r\n    const todo = document.createElement(\"div\");\r\n    this.parent.todoListEl.append(todo);\r\n    todo.outerHTML = getTodoTemplate(this);\r\n    this.catchEl();\r\n    this.activateEl();\r\n  }\r\n  catchEl() {\r\n    this.el = this.parent.todoListEl.querySelector(`[data-id='${this.id}']`);\r\n    this.toggleBtn = this.el.querySelector(\".toggle\");\r\n    this.contentEl = this.el.querySelector(\"label\");\r\n    this.editEl = this.el.querySelector(\".edit\");\r\n  }\r\n  activateEl() {\r\n    this.toggleBtn.onclick = () => {\r\n      this.toggleCompleted();\r\n    };\r\n    this.el.querySelector(\".destroy\").onclick = () => {\r\n      this.delete();\r\n    };\r\n    this.contentEl.ondblclick = () => {\r\n      this.editContent();\r\n    };\r\n  }\r\n  toggleCompleted() {\r\n    this.completed = !this.completed;\r\n    DB.updateOne(this);\r\n    this.el.classList.toggle(\"completed\");\r\n    this.toggleBtn.checked = this.completed ? true : false;\r\n    this.completed \r\n      ? this.toggleBtn.setAttribute(\"checked\", \"checked\") \r\n      : this.toggleBtn.removeAttribute(\"checked\");\r\n    this.parent.isHiddenBtn();\r\n    this.parent.setUncompletedCount();\r\n  }\r\n  delete() {\r\n    this.el.remove();\r\n    DB.deleteOne(this.id);\r\n    this.parent.todos = this.parent.todos.filter((todo) => todo !== this);\r\n    this.parent.isHiddenSection();\r\n    this.parent.isHiddenBtn();\r\n    this.parent.setUncompletedCount();\r\n  }\r\n  editContent() {\r\n    this.editEl.value = this.content;\r\n    this.el.classList.add(\"editing\");\r\n    this.editEl.focus();\r\n    this.editEl.onblur = () => {\r\n      this.updateContent();\r\n    };\r\n    this.editEl.onkeyup = (e) => {\r\n      if(e.key === \"Enter\") {\r\n        this.updateContent();\r\n      }\r\n    };\r\n  }\r\n  updateContent() {\r\n   this.content = this.editEl.value;\r\n   DB.updateOne(this);\r\n   this.contentEl.innerText = this.content;\r\n   this.el.classList.remove(\"editing\");\r\n  }\r\n}\r\n","export function getTodoListTemplate() {\r\n  return `\r\n  <section class=\"todoapp\">\r\n    <header class=\"header\">\r\n      <h1>todos</h1>\r\n      <input\r\n        class=\"new-todo\"\r\n        placeholder=\"What needs to be done?\"\r\n        autofocus\r\n      />\r\n    </header>\r\n    <!-- This section should be hidden by default and shown when there are todos -->\r\n    <section class=\"main\">\r\n      <input id=\"toggle-all\" class=\"toggle-all\" type=\"checkbox\" />\r\n      <label for=\"toggle-all\" title=\"Mark all as complete\">Mark all as complete</label>\r\n      <ul class=\"todo-list\">\r\n      </ul>\r\n    </section>\r\n    <!-- This footer should be hidden by default and shown when there are todos -->\r\n    <footer class=\"footer\">\r\n      <!-- This should be '0 items left' by default -->\r\n      <span class=\"todo-count\"><strong>0</strong> item left</span>\r\n      <!-- Remove this if you don't implement routing -->\r\n      <ul class=\"filters\">\r\n        <li>\r\n          <a class=\"selected\" href=\"#/\">All</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#/active\">Active</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#/completed\">Completed</a>\r\n        </li>\r\n      </ul>\r\n      <!-- Hidden if no completed items are left ↓ -->\r\n      <button class=\"clear-completed\">Clear completed</button>\r\n    </footer>\r\n  </section>\r\n  <footer class=\"info\">\r\n    <p>Double-click to edit a todo</p>\r\n    <!-- Change this out with your name and url ↓ -->\r\n    <p>Created by <a href=\"https://github.com/sabine-xuaitsep\">SaBiNeXuaiTseP</a></p>\r\n    <p>Part of <a href=\"http://todomvc.com\">TodoMVC</a></p>\r\n  </footer>\r\n  `;\r\n}\r\n","import \"./todoList.css\";\r\nimport { DB } from \"../../services/DB\";\r\nimport { Todo } from \"../Todo/Todo\";\r\nimport { getTodoListTemplate } from \"./todoListTemplate\";\r\n\r\nexport class TodoList {\r\n  constructor(data) {\r\n    DB.setTodos(data.todos);\r\n    this.el = document.querySelector(data.el);\r\n    this.todoListEl = null;\r\n    this.newTodoEl = null;\r\n    this.clearCompletedBtn = null;\r\n    this.filterLinks = null;\r\n    this.selectedFilter = null;\r\n    this.todos = [];\r\n    this.loadTodos();\r\n  }\r\n  loadTodos() {\r\n    const todos = DB.findAll();\r\n    todos.forEach((todo) => {\r\n      this.todos.push(new Todo({ parent: this, todo }));\r\n    });\r\n    this.render();\r\n  }\r\n  render() {\r\n    this.el.innerHTML = getTodoListTemplate();\r\n    this.catchEl();\r\n    this.todos.forEach((todo) => {\r\n      todo.render();\r\n    });\r\n    this.isHiddenSection();\r\n    this.isHiddenBtn();\r\n    this.setUncompletedCount();\r\n    this.activateEl();\r\n  }\r\n  catchEl() {\r\n    this.todoListEl = this.el.querySelector(\".todo-list\");\r\n    this.newTodoEl = this.el.querySelector(\".new-todo\");\r\n    this.clearCompletedBtn = this.el.querySelector(\".clear-completed\");\r\n    this.filterLinks = this.el.querySelectorAll(\".filters li a\");\r\n  }\r\n  activateEl() {\r\n    this.newTodoEl.onkeyup = (e) => {\r\n      if(e.key === \"Enter\") {\r\n        if(this.newTodoEl.value !== \"\") {\r\n          this.addOne();\r\n        }\r\n      }\r\n    };\r\n    this.clearCompletedBtn.onclick = () => {\r\n      this.deleteCompleted();\r\n    };\r\n    this.el.querySelector(\".toggle-all\").onclick = () => {\r\n      this.completeAll();\r\n    };\r\n    this.filterLinks.forEach((filter) => {\r\n      filter.onclick = (e) => {\r\n        e.preventDefault();\r\n        this.filter(filter);\r\n      };\r\n    });\r\n  }\r\n  isHiddenSection() {\r\n    this.el.querySelector(\".main\").style.display =\r\n      this.todos.length === 0 ? \"none\" : \"block\";\r\n    this.el.querySelector(\".footer\").style.display =\r\n      this.todos.length === 0 ? \"none\" : \"block\";\r\n  }\r\n  isHiddenBtn() {\r\n    this.clearCompletedBtn.style.display = \r\n      this.todos.some((todo) => todo.completed) ? \"block\" : \"none\";\r\n  }\r\n  setUncompletedCount() {\r\n    const uncompletedCount = this.todos.filter((todo) => !todo.completed).length;\r\n    this.el.querySelector(\".todo-count\").innerHTML = `\r\n      <strong>${uncompletedCount}</strong> \r\n      item${uncompletedCount !== 1 ? \"s\": \"\"} left\r\n      `;\r\n  }\r\n  addOne() {\r\n    const todo = { \r\n      id: this.todos.length === 0 ? 1 : (this.todos.at(-1).id) + 1, \r\n      content: this.newTodoEl.value, \r\n      completed: false \r\n    };\r\n    DB.insertOne(todo);\r\n    const newTodo = new Todo({ parent: this, todo });\r\n    this.todos.push(newTodo);\r\n    newTodo.render();\r\n    this.newTodoEl.value = \"\";\r\n    this.isHiddenSection();\r\n    this.setUncompletedCount();\r\n  }\r\n  deleteCompleted() {\r\n    this.todos.forEach((todo) => {\r\n      if(todo.completed) {\r\n        todo.delete();\r\n      }\r\n    });\r\n  }\r\n  completeAll() {\r\n    this.todos.forEach((todo) => {\r\n      if(!todo.completed) {\r\n        todo.toggleCompleted();\r\n      }\r\n    });\r\n  }\r\n  filter(el) {\r\n    this.selectedFilter = el.href.split(\"#/\")[1];\r\n    this.todos.forEach((todo) => {\r\n      switch (this.selectedFilter) {\r\n        case \"active\":\r\n          todo.el.style.display = !todo.completed ? \"block\" : \"none\";\r\n          break;\r\n        case \"completed\":\r\n          todo.el.style.display = todo.completed ? \"block\" : \"none\";\r\n          break;\r\n        default:\r\n          todo.el.style.display = \"block\";\r\n          break;\r\n      }\r\n    });\r\n    this.filterLinks.forEach((filter) => {\r\n      filter === el\r\n        ? filter.classList.add(\"selected\")\r\n        : filter.classList.remove(\"selected\");\r\n    });\r\n  }\r\n}\r\n","import todos from \"./data\";\r\nimport { TodoList } from \"./components/TodoList/TodoList\";\r\n\r\nnew TodoList({\r\n  el: \"#app\",\r\n  todos\r\n});"]}